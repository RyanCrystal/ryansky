[{"/Users/macbook/Ryansky/ryansky/pages/_app.js":"1","/Users/macbook/Ryansky/ryansky/pages/api/hello.js":"2","/Users/macbook/Ryansky/ryansky/pages/index.js":"3","/Users/macbook/Ryansky/ryansky/pages/about.js":"4","/Users/macbook/Ryansky/ryansky/pages/metronome.js":"5","/Users/macbook/Ryansky/ryansky/components/AboutMe.js":"6","/Users/macbook/Ryansky/ryansky/components/ContactMe.js":"7","/Users/macbook/Ryansky/ryansky/components/Header.js":"8","/Users/macbook/Ryansky/ryansky/components/Layout.js":"9","/Users/macbook/Ryansky/ryansky/components/MainSection.js":"10","/Users/macbook/Ryansky/ryansky/components/Nav.js":"11","/Users/macbook/Ryansky/ryansky/components/ProjectItem.js":"12","/Users/macbook/Ryansky/ryansky/components/Projects.js":"13","/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/CustomMetronome.js":"14","/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/Step.js":"15","/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/Steps.js":"16","/Users/macbook/Ryansky/ryansky/components/metronome/Helper/Sounds.js":"17","/Users/macbook/Ryansky/ryansky/components/metronome/Helper/function.js":"18","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/IconList.js":"19","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/ImageMove.js":"20","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/Rhythm.js":"21","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/Speed.js":"22","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome.js":"23","/Users/macbook/Ryansky/ryansky/components/metronome/hooks/useLongPress.js":"24","/Users/macbook/Ryansky/ryansky/components/metronome/hooks/useStepChange.js":"25"},{"size":140,"mtime":1643840332975,"results":"26","hashOfConfig":"27"},{"size":170,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1010,"mtime":1643949491922,"results":"29","hashOfConfig":"27"},{"size":63,"mtime":1643840066575,"results":"30","hashOfConfig":"27"},{"size":142,"mtime":1644017627458,"results":"31","hashOfConfig":"27"},{"size":698,"mtime":1643953084077,"results":"32","hashOfConfig":"27"},{"size":635,"mtime":1643927976593,"results":"33","hashOfConfig":"27"},{"size":0,"mtime":1643842475121,"results":"34","hashOfConfig":"27"},{"size":0,"mtime":1643842487469,"results":"35","hashOfConfig":"27"},{"size":853,"mtime":1643951098739,"results":"36","hashOfConfig":"27"},{"size":2246,"mtime":1643950801856,"results":"37","hashOfConfig":"27"},{"size":966,"mtime":1644093630055,"results":"38","hashOfConfig":"27"},{"size":1163,"mtime":1644017270242,"results":"39","hashOfConfig":"27"},{"size":6220,"mtime":1644036667656,"results":"40","hashOfConfig":"27"},{"size":2529,"mtime":1644032158908,"results":"41","hashOfConfig":"27"},{"size":440,"mtime":1643861106942,"results":"42","hashOfConfig":"27"},{"size":12840,"mtime":1643860235304,"results":"43","hashOfConfig":"27"},{"size":1226,"mtime":1643860235305,"results":"44","hashOfConfig":"27"},{"size":449,"mtime":1643859787033,"results":"45","hashOfConfig":"27"},{"size":1502,"mtime":1644034399509,"results":"46","hashOfConfig":"27"},{"size":4602,"mtime":1644036449600,"results":"47","hashOfConfig":"27"},{"size":2980,"mtime":1644035956963,"results":"48","hashOfConfig":"27"},{"size":1193,"mtime":1644033556541,"results":"49","hashOfConfig":"27"},{"size":1680,"mtime":1643860327273,"results":"50","hashOfConfig":"27"},{"size":478,"mtime":1643860327274,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j3ihka",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Ryansky/ryansky/pages/_app.js",[],[],"/Users/macbook/Ryansky/ryansky/pages/api/hello.js",[],[],"/Users/macbook/Ryansky/ryansky/pages/index.js",[],[],"/Users/macbook/Ryansky/ryansky/pages/about.js",[],[],"/Users/macbook/Ryansky/ryansky/pages/metronome.js",[],[],"/Users/macbook/Ryansky/ryansky/components/AboutMe.js",[],[],"/Users/macbook/Ryansky/ryansky/components/ContactMe.js",[],[],"/Users/macbook/Ryansky/ryansky/components/Header.js",[],[],"/Users/macbook/Ryansky/ryansky/components/Layout.js",[],[],"/Users/macbook/Ryansky/ryansky/components/MainSection.js",[],[],"/Users/macbook/Ryansky/ryansky/components/Nav.js",[],[],"/Users/macbook/Ryansky/ryansky/components/ProjectItem.js",[],[],"/Users/macbook/Ryansky/ryansky/components/Projects.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/CustomMetronome.js",["131","132"],[],"import React, { useEffect, useRef, useReducer } from \"react\";\nimport { useState } from \"react\";\n\nimport Steps from \"./Steps\";\n// import styles from \"./CustomMetronome.css\";\nimport Sounds from \"../Helper/Sounds\";\nimport IconList from \"../Metronome/IconList\";\nimport BufferLoader from \"../Helper/function\";\n\nconst initState = {\n  stepsData: [\n    {\n      timeSignature: \"2/4\",\n      measureNumber: 8,\n      tempo: 110,\n      stressFirstBeat: true,\n      beat: 2\n    },\n    {\n      timeSignature: \"3/4\",\n      measureNumber: 100,\n      tempo: 110,\n      stressFirstBeat: true,\n      beat: 3\n    }\n  ],\n  currentStepIndex: 0,\n  beatCount: -1,\n  currentStepCount: -1\n};\nconst stepsTotalDataReducer = (state, action) => {\n  let newState;\n  switch (action.type) {\n    case \"change\":\n      newState = JSON.parse(JSON.stringify(state));\n      let index = action.data.index;\n      let field = action.data.field;\n      let value = action.data.value;\n      newState.stepsData[index][field] = value;\n      if (field == \"timeSignature\") {\n        newState.stepsData[index][\"beat\"] = parseInt(value[0]);\n      }\n\n      break;\n    case \"add_step\":\n      console.log(\"add_step\");\n      newState = JSON.parse(JSON.stringify(state));\n\n      newState.stepsData.push({\n        timeSignature: \"4/4\",\n        measureNumber: 4,\n        tempo: 110,\n        stressFirstBeat: true,\n        beat: 4\n      });\n      console.log(newState);\n      break;\n    case \"delete_step\":\n      newState = JSON.parse(JSON.stringify(state));\n      newState.stepsData.splice(action.data.index, 1);\n      break;\n    case \"changeBeatCount\":\n      newState = JSON.parse(JSON.stringify(state));\n      newState.beatCount = newState.beatCount + 1;\n      newState.currentStepCount = newState.currentStepCount + 1;\n      break;\n    case \"playNextStep\":\n      newState = JSON.parse(JSON.stringify(state));\n      newState.currentStepIndex = newState.currentStepIndex + 1;\n      newState.currentStepCount = -1;\n      break;\n    case \"reset\":\n      newState = { ...initState };\n\n    default:\n      break;\n  }\n  return newState;\n};\n\nconst CustomMetronome = () => {\n  const [stepsTotalData, dispatch] = useReducer(\n    stepsTotalDataReducer,\n    initState\n  );\n\n  const bufferLoader = useRef();\n  const interval = useRef();\n\n  const context = useRef();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    if (isPlaying) {\n      playBufferList(bufferLoader.current.bufferList);\n    } else {\n      clearInterval(interval.current);\n    }\n  }, [isPlaying, stepsTotalData.beatCount]);\n\n  useEffect(() => {\n    init();\n  }, []);\n  useEffect(() => {\n    return () => {\n      clearInterval(interval.current);\n      resetCustomMetronome();\n    };\n  }, []);\n\n  const init = () => {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context.current = new AudioContext();\n    let r, r2;\n    ({ r, r2 } = Sounds());\n\n    bufferLoader.current = new BufferLoader(\n      context.current,\n      [r2, r],\n      playBufferList\n    );\n    bufferLoader.current.load();\n  };\n\n  const playBufferList = (bufferList) => {\n    clearInterval(interval.current);\n    if (stepsTotalData.beatCount != -1 || isPlaying) {\n      interval.current = setInterval(() => {\n        play(bufferList);\n      }, 60000 / stepsTotalData.stepsData[stepsTotalData.currentStepIndex].tempo);\n    }\n  };\n\n  const play = (bufferList) => {\n    var source1 = context.current.createBufferSource();\n    source1.buffer = bufferList[0];\n    source1.connect(context.current.destination);\n\n    var source2 = context.current.createBufferSource(); // accent\n    source2.buffer = bufferList[1];\n    source2.connect(context.current.destination);\n    let sum = 0;\n    for (let i = 0; i <= stepsTotalData.currentStepIndex; i++) {\n      sum +=\n        stepsTotalData.stepsData[i].beat *\n        stepsTotalData.stepsData[i].measureNumber;\n    }\n    sum = sum - 2;\n    if (\n      stepsTotalData.stepsData[stepsTotalData.currentStepIndex]\n        .stressFirstBeat &&\n      (stepsTotalData.currentStepCount +\n        stepsTotalData.stepsData[stepsTotalData.currentStepIndex].beat) %\n        stepsTotalData.stepsData[stepsTotalData.currentStepIndex].beat ==\n        stepsTotalData.stepsData[stepsTotalData.currentStepIndex].beat - 1\n    ) {\n      source2.start(0);\n    } else {\n      source1.start(0);\n    }\n\n    dispatch({\n      type: \"changeBeatCount\"\n    });\n\n    if (stepsTotalData.beatCount == sum) {\n      if (\n        stepsTotalData.currentStepIndex + 1 <\n        stepsTotalData.stepsData.length\n      ) {\n        dispatch({\n          type: \"playNextStep\"\n        });\n      } else {\n        setIsPlaying((prev) => !prev);\n      }\n    }\n  };\n\n  const addStep = () => {\n    dispatch({\n      type: \"add_step\"\n    });\n  };\n\n  const changeStepsData = (index, field, value) => {\n    dispatch({\n      type: \"change\",\n      data: {\n        index: index,\n        field: field,\n        value: value\n      }\n    });\n  };\n\n  const deleteStep = (index) => {\n    dispatch({\n      type: \"delete_step\",\n      data: {\n        index: index\n      }\n    });\n  };\n\n  const playCustomMetronome = () => {\n    setIsPlaying((prev) => !prev);\n  };\n\n  const resetCustomMetronome = () => {\n    dispatch({\n      type: \"reset\"\n    });\n  };\n\n  return (\n    <div className=\"metronome_container\">\n      <h1>Customize Metronome</h1>\n      <button className=\"add-step-btn button-3\" onClick={addStep}>\n        Add Step\n      </button>\n      <Steps\n        stepsTotalData={stepsTotalData}\n        changeStepsData={changeStepsData}\n        deleteStep={deleteStep}\n      />\n      <IconList\n        beat={stepsTotalData.stepsData[stepsTotalData.currentStepIndex].beat}\n        index={\n          stepsTotalData.currentStepCount %\n          stepsTotalData.stepsData[stepsTotalData.currentStepIndex].beat\n        }\n      />\n\n      <div className=\"action-btns\">\n        <button onClick={playCustomMetronome} className=\"play-cus-btn button-1\">\n          {isPlaying ? \"Pause\" : \"Play\"}\n        </button>\n        <button\n          onClick={resetCustomMetronome}\n          disabled={isPlaying}\n          className=\"button-1\"\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomMetronome;\n","/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/Step.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/CustomMetronome/Steps.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/Helper/Sounds.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/Helper/function.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/IconList.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/ImageMove.js",["133"],[],"import React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\n\n// import \"./ImageMove.css\";\n\nconst ImageMove = (props) => {\n  const conductor_stick = \"../../../img/projects/conductor-stick.png\";\n  const [hideBaton, setHideBaton] = useState(false);\n  if (!props.node) {\n    return null;\n  }\n  const clickHideBatonHandler = () => {\n    setHideBaton((prev) => !prev);\n  };\n  const beat = props.beat;\n  const index = props.index;\n  let active = false;\n  if (beat == 4 && (index == 0 || index == 2)) {\n    active = true;\n  }\n  if (beat == 2 && index == 0) {\n    active = true;\n  }\n  if (beat == 3 && index == 1) {\n    active = true;\n  }\n  let activeBeat3 = false;\n  if (beat == 3 && index == 0) {\n    activeBeat3 = true;\n  }\n  // console.log(props.node);\n\n  return ReactDom.createPortal(\n    <>\n      {!hideBaton && (\n        <div className=\"image-move-container\">\n          <div className=\"edge\"></div>\n          <div className=\"edge edge2\"></div>\n          {beat == 3 && <div className=\"edge edge3\"></div>}\n          <div\n            className={`image-container ${active ? \"active\" : \"\"} ${\n              activeBeat3 ? \"activeBeat3\" : \"\"\n            }`}\n          >\n            <img src={conductor_stick} alt=\"baton\" />\n          </div>\n        </div>\n      )}\n      <button\n        className=\"button-3 hide-baton-btn\"\n        onClick={clickHideBatonHandler}\n      >\n        {hideBaton ? \"Show Baton\" : \"Hide baton\"}\n      </button>\n    </>,\n    props.node\n  );\n};\n\nexport default ImageMove;\n","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/Rhythm.js",["134","135"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport BufferLoader from \"../Helper/function\";\n\nimport IconList from \"./IconList\";\nimport ImageMove from \"./ImageMove\";\nimport Sounds from \"../Helper/Sounds\";\n// import \"./Rhythm.css\";\n\nconst Rhythm = (props) => {\n  const speed = props.speed;\n  const isLongPressing = props.isLongPressing;\n  const [isPlaying, setIsPlaying] = useState(false);\n  const reached = useRef(true);\n  const timeout = useRef();\n  const interval = useRef();\n  const [index, setIndex] = useState(-1);\n  const [beat, setBeat] = useState(4);\n  const [stressFirstBeat, setStressFirstBeat] = useState(true);\n  const beatRange = [2, 3, 4, 5, 6];\n  const bufferLoader = useRef();\n  const context = useRef();\n\n  if (!props.node && typeof window !== \"undefined\") {\n    document.addEventListener(\"keyup\", (e) => {\n      if (e.key === \" \") {\n        onClickHandler(e);\n        console.log(\"document space triggered\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      console.log(\"unmounted\");\n      clearInterval(interval.current);\n      clearTimeout(timeout.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      playBufferList(bufferLoader.current.bufferList);\n    } else {\n      clearInterval(interval.current);\n      clearTimeout(timeout.current);\n    }\n  }, [speed, isPlaying, isLongPressing, index]);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const init = () => {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context.current = new AudioContext();\n    let r, r2;\n    ({ r, r2 } = Sounds());\n\n    bufferLoader.current = new BufferLoader(\n      context.current,\n      [r2, r],\n      playBufferList\n    );\n    bufferLoader.current.load();\n  };\n\n  const playBufferList = (bufferList) => {\n    clearInterval(interval.current);\n    if (index != -1 || isPlaying) {\n      interval.current = setInterval(() => {\n        play(bufferList);\n      }, 60000 / speed);\n    }\n\n    if (isLongPressing && reached.current) {\n      timeout.current = setTimeout(() => {\n        reached.current = true;\n        play(bufferList);\n      }, 60000 / speed);\n      reached.current = false;\n    }\n\n    if (!isLongPressing) {\n      clearTimeout(timeout.current);\n      reached.current = true;\n    }\n  };\n\n  const play = (bufferList) => {\n    var source1 = context.current.createBufferSource();\n    source1.buffer = bufferList[0];\n    source1.connect(context.current.destination);\n    // source1.start(0);\n\n    var source2 = context.current.createBufferSource(); // accent\n    source2.buffer = bufferList[1];\n    source2.connect(context.current.destination);\n    // source2.start(0);\n\n    setIndex((prev) => (prev + 1) % beat);\n\n    if (stressFirstBeat && (index + beat) % beat == beat - 1) {\n      source2.start(0);\n    } else {\n      source1.start(0);\n    }\n  };\n\n  const onClickHandler = (e) => {\n    if (e.key == \" \") {\n      e.preventDefault();\n    }\n    console.log(\"click triggered\");\n    setIsPlaying((prev) => !prev);\n  };\n\n  const handleStressChange = (e) => {\n    if (e.key === \" \") {\n      e.preventDefault();\n\n      return;\n    }\n    setStressFirstBeat((prev) => !prev);\n  };\n\n  const onDecreaseBeatHandler = () => {\n    setBeat((prev) => (beatRange.includes(prev - 1) ? prev - 1 : prev));\n  };\n\n  const onIncreaseBeatHandler = () => {\n    setBeat((prev) => (beatRange.includes(prev + 1) ? prev + 1 : prev));\n  };\n  return (\n    <div>\n      <ImageMove index={index} beat={beat} node={props.node} />\n\n      <IconList beat={beat} index={index} />\n\n      <div className=\"play-btn\" onClick={onClickHandler}>\n        <button className={`button ${isPlaying ? \"paused\" : \"\"}`}></button>\n      </div>\n      <hr />\n      <div className=\"tools-container\">\n        <div className=\"first-beat-checkbox\">\n          <label>\n            Stress First Beat\n            <br />\n            第一拍重拍\n            <input\n              type=\"checkbox\"\n              checked={stressFirstBeat}\n              onChange={handleStressChange}\n              onKeyUp={handleStressChange}\n            />\n            <span className=\"checkmark\"></span>\n          </label>\n        </div>\n        <div className=\"beat-container\">\n          <div className=\"small-minus\" onClick={onDecreaseBeatHandler}>\n            <span>-</span>\n          </div>\n          <div className=\"beat\">{beat}</div>\n          <div className=\"small-plus\" onClick={onIncreaseBeatHandler}>\n            <span>+</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rhythm;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API\n","/Users/macbook/Ryansky/ryansky/components/metronome/Metronome/Speed.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/Metronome.js",[],[],"/Users/macbook/Ryansky/ryansky/components/metronome/hooks/useLongPress.js",["136"],[],"import { useCallback, useRef, useState } from \"react\";\n\nconst useLongPress = (\n  onLongPress,\n  onClick,\n  onLongPressLeave,\n  { shouldPreventDefault = true, delay = 300 } = {}\n) => {\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = useRef();\n  const target = useRef();\n\n  const start = useCallback(\n    (event) => {\n      if (shouldPreventDefault && event.target) {\n        event.target.addEventListener(\"touchend\", preventDefault, {\n          passive: false,\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        onLongPress(event);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault]\n  );\n\n  const clear = useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick();\n      longPressTriggered && onLongPressLeave();\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener(\"touchend\", preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered]\n  );\n\n  return {\n    onMouseDown: (e) => start(e),\n    onTouchStart: (e) => start(e),\n    onMouseUp: (e) => clear(e),\n    onMouseLeave: (e) => clear(e, false),\n    onTouchEnd: (e) => clear(e),\n  };\n};\n\nconst isTouchEvent = (event) => {\n  return \"touches\" in event;\n};\n\nconst preventDefault = (event) => {\n  if (!isTouchEvent(event)) return;\n\n  if (event.touches.length < 2 && event.preventDefault) {\n    event.preventDefault();\n  }\n};\n\nexport default useLongPress;\n","/Users/macbook/Ryansky/ryansky/components/metronome/hooks/useStepChange.js",[],[],{"ruleId":"137","severity":1,"message":"138","line":99,"column":6,"nodeType":"139","endLine":99,"endColumn":43,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":103,"column":6,"nodeType":"139","endLine":103,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":45,"column":13,"nodeType":"145","endLine":45,"endColumn":54},{"ruleId":"137","severity":1,"message":"138","line":47,"column":6,"nodeType":"139","endLine":47,"endColumn":47,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"141","line":51,"column":6,"nodeType":"139","endLine":51,"endColumn":8,"suggestions":"147"},{"ruleId":"137","severity":1,"message":"148","line":39,"column":5,"nodeType":"139","endLine":39,"endColumn":56,"suggestions":"149"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playBufferList'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["151"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",["152"],["153"],"React Hook useCallback has a missing dependency: 'onLongPressLeave'. Either include it or remove the dependency array. If 'onLongPressLeave' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"157","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [isPlaying, playBufferList, stepsTotalData.beatCount]",{"range":"164","text":"165"},"Update the dependencies array to be: [init]",{"range":"166","text":"167"},"Update the dependencies array to be: [speed, isPlaying, isLongPressing, index, playBufferList]",{"range":"168","text":"169"},{"range":"170","text":"167"},"Update the dependencies array to be: [longPressTriggered, onClick, onLongPressLeave, shouldPreventDefault]",{"range":"171","text":"172"},[2508,2545],"[isPlaying, playBufferList, stepsTotalData.beatCount]",[2586,2588],"[init]",[1323,1364],"[speed, isPlaying, isLongPressing, index, playBufferList]",[1405,1407],[1163,1214],"[longPressTriggered, onClick, onLongPressLeave, shouldPreventDefault]"]